# Generated by Django 3.0.6 on 2020-05-19 01:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Zona',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Nombre')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitud')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitud')),
            ],
            options={
                'verbose_name': 'Información de la Zona',
                'verbose_name_plural': 'Información de las Zonas',
                'db_table': 'zona_information',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='StudentInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Nombre y Apellidos')),
                ('municipality', models.CharField(blank=True, max_length=150, null=True, verbose_name='Municipio')),
                ('carrera', models.CharField(blank=True, max_length=150, null=True, verbose_name='Carrera')),
                ('yearStudent', models.CharField(blank=True, max_length=300, null=True, verbose_name='Año de estudio')),
                ('phone', models.CharField(blank=True, max_length=300, null=True, verbose_name='Teléfono')),
                ('zona', models.OneToOneField(default=None, on_delete=django.db.models.deletion.CASCADE, to='mapStudentApp.Zona', verbose_name='zona')),
            ],
            options={
                'verbose_name': 'Información del Estudiante',
                'verbose_name_plural': 'Información de los Estudiantes',
                'db_table': 'student_information',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Resumen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('totalLifeYes', models.BigIntegerField(verbose_name='Vive Solo/Total Si')),
                ('totalLifeNo', models.BigIntegerField(verbose_name='Vive Solo/Total No')),
                ('atetionYes', models.BigIntegerField(verbose_name='Atencion de Familia/Total Si')),
                ('atetionNo', models.BigIntegerField(verbose_name='Atencion de Familia/Total No')),
                ('mfYes', models.BigIntegerField(verbose_name='Médico de familia/Total Si')),
                ('mfNo', models.BigIntegerField(verbose_name='Médico de familia/Total No')),
                ('servicesYes', models.BigIntegerField(verbose_name='Mensajería para medicamentos/Total Si')),
                ('servicesNo', models.BigIntegerField(verbose_name='Mensajería para medicamentos/Total No')),
                ('safYes', models.BigIntegerField(verbose_name='SAF/Total Si')),
                ('safNo', models.BigIntegerField(verbose_name='SAF/Total No')),
                ('alimentYes', models.BigIntegerField(verbose_name='Mensajería para alimentos/Total Si')),
                ('alimentNo', models.BigIntegerField(verbose_name='Mensajería para alimentos/Total No')),
                ('zona', models.OneToOneField(default=None, on_delete=django.db.models.deletion.CASCADE, to='mapStudentApp.Zona', verbose_name='zona')),
            ],
            options={
                'verbose_name': 'Resumen',
                'verbose_name_plural': 'Resumenes',
                'db_table': 'resumen_information',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Encuesta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Nombre y Apellidos')),
                ('life', models.BooleanField(default=True, verbose_name='Vive solo')),
                ('atetion', models.BooleanField(default=True, verbose_name='Recibe atención de su familia')),
                ('mf', models.BooleanField(default=True, verbose_name='Recibe atención del médico de familia')),
                ('services', models.BooleanField(default=True, verbose_name='Tiene Usted servicio de mensajería para obtener los medicamentos')),
                ('saf', models.BooleanField(default=True, verbose_name='Recibe atención del SAF para obtener los medicamentos')),
                ('aliment', models.BooleanField(default=True, verbose_name='Tiene Usted servicio de mensajería para obtener los alimentos')),
                ('zona', models.OneToOneField(default=None, on_delete=django.db.models.deletion.CASCADE, to='mapStudentApp.Zona', verbose_name='zona')),
            ],
            options={
                'verbose_name': 'Información del encuesta',
                'verbose_name_plural': 'Información de las encuestas',
                'db_table': 'encuesta_information',
                'ordering': ['id'],
            },
        ),
    ]
